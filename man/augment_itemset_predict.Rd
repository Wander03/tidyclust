% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/augment_itemset_predict.R
\name{augment_itemset_predict}
\alias{augment_itemset_predict}
\title{Augment Itemset Predictions with Truth Values}
\usage{
augment_itemset_predict(pred_output, truth_output)
}
\arguments{
\item{pred_output}{A data frame that is the output of \code{predict()} from a \code{freq_itemsets} model.
It is expected to have a column named \code{.pred_cluster}, where each cell contains
a data frame with prediction details (including \code{.pred_item}, \code{.obs_item}, and \code{item}).}

\item{truth_output}{A data frame representing the ground truth. It should have a similar
structure to the input data used for prediction, where columns represent items
and rows represent transactions.}
}
\value{
A data frame with the following columns:
\itemize{
\item \code{item}: The name of the item.
\item \code{row_id}: An identifier for the transaction (row) from which the prediction came.
\item \code{preds}: The predicted value for the item (either raw probability or binary prediction).
\item \code{truth}: The true value for the item from \code{truth_output}.
}
This output is suitable for direct use with \code{yardstick} metric functions.
}
\description{
This function processes the output of a \code{predict()} call for frequent itemset models
and joins it with the corresponding ground truth data. It's designed to prepare
the prediction and truth values in a format suitable for calculating evaluation metrics
using packages like \code{yardstick}.
}
\details{
The function first extracts and combines all individual item prediction data frames
nested within the \code{pred_output}. It then filters for items where a prediction was made
(i.e., \code{!is.na(.pred_item)}) and standardizes item names by removing backticks.
The \code{truth_output} is pivoted to a long format to match the structure of the predictions.
Finally, an inner join is performed to ensure that only predicted items are included in
the final result, aligning predictions with their corresponding true values.
}
\examples{
toy_df <- data.frame(
"beer"    = c(FALSE, TRUE, TRUE, TRUE, FALSE),
"milk"    = c(TRUE, FALSE, TRUE, TRUE, TRUE),
"bread"   = c(TRUE, TRUE, FALSE, TRUE, TRUE),
"diapers" = c(TRUE, TRUE, TRUE, TRUE, TRUE),
"eggs"    = c(FALSE, TRUE, FALSE, FALSE, FALSE)
)

new_data <- data.frame(
"beer"    = NA,
"milk"    = TRUE,
"bread"   = TRUE,
"diapers" = TRUE,
"eggs"    = FALSE
)

truth_df <- data.frame(
"beer"    = FALSE,
"milk"    = TRUE,
"bread"   = TRUE,
"diapers" = TRUE,
"eggs"    = FALSE
)

fi_spec <- freq_itemsets(
 min_support = 0.05,
 mining_method = "eclat"
 ) |>
 set_engine("arules") |>
 set_mode("partition")

fi_fit <- fi_spec |>
 fit(~ .,
    data = toy_df
 )

aug_pred <- fi_fit |>
 predict(new_data, type = "raw") |>
 augment_itemset_predict(truth_output = truth_df)

aug_pred

# Example use of formatted output
aug_pred |>
  yardstick::rmse(truth, preds)

}
